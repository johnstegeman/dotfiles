command -v duf     &> /dev/null    && alias -- df=duf
command -v dua     &> /dev/null    && alias -- du='dua i'
command -v darwin-rebuild     &> /dev/null    && alias -- dup='sudo darwin-rebuild switch --flake ~/.config/nix-home"#macosSystem"'
command -v eza     &> /dev/null    && alias -- eza='eza '\''--time-style=long-iso'\'' -F --group-directories-first'
command -v home-manager     &> /dev/null    && alias -- hmup='home-manager switch --flake ~/.config/nix-home"#linuxSystem" --extra-experimental-features "nix-command flakes"'
command -v eza     &> /dev/null    && alias -- la='eza -a'
command -v eza     &> /dev/null    && alias -- ll='eza -l'
command -v eza     &> /dev/null    && alias -- lla='eza -la'
command -v eza     &> /dev/null    && alias -- ls=eza
command -v eza     &> /dev/null    && alias -- lt='eza --tree'
command -v trash     &> /dev/null    && alias -- rm=trash
alias clear=z4h-clear-screen-soft-bottom
command -v chezmoi     &> /dev/null    && alias cm=chezmoi
command -v chezmoi     &> /dev/null    && alias cmap="chezmoi apply -v --no-pager"

## git

alias g='git'
alias ga='g add'
alias gaa='ga --all'
alias gb='g branch'
alias gba='g branch --all'
alias gc='g commit -v'
alias gl='g pull'
alias gp='g push'
alias gst='g status'

alias mp=multipass

## from zsh-steggy

alias -- -='cd -'

alias md='mkdir -p'
alias rd=rmdir

alias lg=lazygit

## functions

function _1st_found {
   for cmd in "$@"; do
   if type "$cmd" &>/dev/null; then
      printf "%s" "${cmd}"
      break
   fi
done
}

function d {
   if [[ -n $1 ]]; then
    dirs "$@"
   else
    dirs -v | head -n 10
   fi
}

function doifcmd {
   cmd=$1
   script=$2

   if [ -x "$(command -v $cmd)" ]; then
      eval $script
   fi
}

function download {
   tar_ball=neo4j-enterprise-$1-unix.tar.gz
   if [[ ! -f "./${tar_ball}" ]]; then
      curl -O -C - "http://dist.neo4j.org/${tar_ball}"
   fi
}

function mcreate {
   multipass launch -c 8 -m 16G -d 18G -n $1 --cloud-init ~/config/neo_init.yaml --mount ~/mounts:/mnt/software
   # ssh  `multipass info $1 --format json | jq -r  ".info.$1.ipv4[0]"` 'sh -c "$(curl -fsLS get.chezmoi.io)" -- init --apply https://github.com/johnstegeman/dotfiles'

}

function mkvenv {
   if [ -v 1 ]; then
      uv venv --python $1
   else
      uv venv 
   fi
   echo "layout uv" >.envrc
   direnv allow
}

function mssh {
   ssh  `multipass info $1 --format json | jq -r  ".info.$1.ipv4[0]"`
}

function safe_alias {
   if [ -x "$(command -v $2)" ]; then
      alias "$1"="$2 $3"
   fi
}

function safe_alias_2 {
   if [ -x "$(command -v $2)" ]; then
      alias "$1"="$2 $3"
   elif [ -x "$(command -v $4)" ]; then
      alias "$1"="$4 $5"
   fi
}

function safe_suffix_alias {
   if [ -x "$(command -v $2)" ]; then
        alias -s "$1"="$2 $3"
   fi
}

function source_directory {
   if [ -d "$1" ]; then
      for file in "$1"/*.zsh; do
         source "$file"
      done
   fi
}

function source_if_exists {
   [ -f "$1" ] && source "$1"
}

function take {
   mkdir -p $@ && cd ${@:$#}
}

function cmcd {
        cd $(chezmoi source-path)
    }

function cmedit() {
      code $(chezmoi source-path)
   }

#function auto_activate_venv() {
#    if [ -f ".venv/bin/activate" ]; then
#        source .venv/bin/activate
#    fi 
#}

# Trigger auto_activate_venv function on directory change
#autoload -U add-zsh-hook
#add-zsh-hook chpwd auto_activate_venv